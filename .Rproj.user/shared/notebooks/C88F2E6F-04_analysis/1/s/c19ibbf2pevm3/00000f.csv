"0","# Top X/ranking for select_multiple type questions"
"0","select_multiple_topX <- function(df, question_name, X = 3) {"
"0","  # test message"
"0","  if(length(colnames(df)[grepl(question_name, colnames(df), fixed = T)]) == 0){"
"0","    stop(print(paste(""question name:"", question_name, ""doesn't exist in the main dataset. Please double check and make required changes!"")))"
"0","  }"
"0","  "
"0","  df <- df %>%"
"0","    select(colnames(df)[grepl(paste0(question_name, "".""), colnames(df), fixed = T)])"
"0","  "
"0","  # if question was not answered"
"0","  if(all(is.na(df))) warning(""None of the choices was selected!"")"
"0",""
"0","  # Keeping only the options names in the colnames"
"0","  colnames(df) <- gsub(paste0(question_name, ""\\.""), """", colnames(df))"
"0","  "
"0","  # calculate top X percentages"
"0","  df <- df %>%"
"0","    mutate_all(as.numeric) %>% "
"0","    pivot_longer(cols = everything(), names_to = question_name, values_to = ""choices"") %>%"
"0","    group_by(!!sym(question_name), .drop=F) %>% "
"0","    summarise(n = sum(choices, na.rm = T),"
"0","              percentages = round(sum(choices, na.rm = T) / n() * 100, digits = 2)) %>% # remove NA values from percentages calculations"
"0","    arrange(desc(percentages)) %>% "
"0","    head(X)   # keep top X percentages only "
"0","  "
"0","  return(df)"
"0","}"
"0",""
"0","# return top 7 shelter enclosure issues"
"0","shelter_enclosure_issues_top7 <- select_multiple_topX(df = main_dataset, question_name = ""e3_shelter_enclosure_issues"", X = 7)"
